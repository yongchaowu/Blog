{"compress":true,"commitItems":[["21ba48cd-47e3-4059-8937-a3d6f82052cf",1561427131764,"# Lorem ipsum\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. Morbi sagittis aliquam orci, id elementum leo varius at. Suspendisse in hendrerit orci. Aliquam nec congue augue.\n\n* [x] In volutpat scelerisque congue.\n* [ ] Nam ultricies justo dictum ligula pulvinar iaculis.\n* [ ] Etiam vulputate nulla eget lectus fermentum accumsan.\n* [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien.",[[1561427116553,["yongchao@yongchao-PC",[[-1,15,"Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi sagittis aliquam orci, id elementum leo varius at. Suspendisse in hendrerit orci. Aliquam nec congue augue."],[-1,191,"\n* [x] In volutpat scelerisque congue.\n* [ ] Nam ultricies justo dictum ligula pulvinar iaculis.\n* [ ] Etiam vulputate nulla eget lectus fermentum accumsan.\n* [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien."]],[15,420],[15,15]]],[1561427119944,["yongchao@yongchao-PC",[[-1,2,"Lorem ipsum"],[1,13,"W"]],[2,13],[3,3]]],[1561427122486,["yongchao@yongchao-PC",[[1,3,"inInet"]],[3,3],[9,9]]],[1561427124787,["yongchao@yongchao-PC",[[-1,6,"n"]],[7,7],[6,6]]],[1561427125373,["yongchao@yongchao-PC",[[1,6,"N"]],[6,6],[7,7]]],[1561427126862,["yongchao@yongchao-PC",[[1,12,"\n"]],[9,9],[10,10]]],[1561427129580,["yongchao@yongchao-PC",[[1,13,"\n"]],[10,10],[11,11]]],[1561427141821,["yongchao@yongchao-PC",[[-1,6,"N"],[1,7,"n"]],[6,7],[7,7]]],[1561427159888,["yongchao@yongchao-PC",[[1,11,"WinInet（“Windows Internet”）API帮助程序员使用三个常见的Internet协议，这三个协议是用于World Wide Web万维网的[超文本](https://baike.baidu.com/item/%E8%B6%85%E6%96%87%E6%9C%AC)[传输协议](https://baike.baidu.com/item/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE)（HTTP：Hypertext Transfer Protocol）、[文件传输协议](https://baike.baidu.com/item/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/1874113)（FTP：File Transfer Protocol）和另一个称为Gopher的文件传输协议。WinInet函数的语法与常用的Win32 API函数的语法类似，这使得使用这些协议就像使用本地硬盘上的文件一样容易。"]],[11,11],[469,469]]],[1561427223572,["yongchao@yongchao-PC",[[1,472,"\n"]],[469,469],[470,470]]],[1561427223803,["yongchao@yongchao-PC",[[1,473,"\n"]],[470,470],[471,471]]],[1561427224227,["yongchao@yongchao-PC",[[1,471,"### WinInet 概述\n\n⊙ Hinternet 句柄的层次关系\n\n⊙ HTTP 函数层次关系\n\n⊙ 典型的 HTTP 客户端程序的处理流程\n\n1、普通 WinInet 处理函数\n\n⊙ [InternetOpen](https://baike.baidu.com/item/InternetOpen) 初始化 WinInet.dll\n\n⊙ [InternetOpenUrl](https://baike.baidu.com/item/InternetOpenUrl) 打开 Url，读取数据\n\n⊙ InternetAttemptConnect 尝试建立到 Internet 的连接\n\n⊙ InternetConnect 建立 Internet 的连接\n\n⊙ InternetCheckConnection 检查 Internet 的连接是否能够建立\n\n⊙ InternetSetOption 设置一个 Internet 选项\n\n⊙ InternetSetStausCallback 安装一个[回调函数](https://baike.baidu.com/item/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0)，供 API [函数调用](https://baike.baidu.com/item/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8)\n\n⊙ InternetQueryOption 查询在一个指定句柄上的 Internet 选项\n\n⊙ InternetQueryDataAvailable 查询可用数据的数量\n\n⊙ InternetReadFile(Ex) 从一个打开的句柄读取数据\n\n⊙ InternetFindNextFile 继续文件搜寻\n\n⊙ InetrnetSetFilePointer 为 InternetReadFile 设置一个文件位置\n\n⊙ InternetWriteFile 将数据写到一个打开的 Internet 文件\n\n⊙ InternetLockRequestFile 允许用户为正在使用的文件加锁\n\n⊙ InternetUnlockRequestFile 解锁被锁定的文件\n\n⊙ InternetTimeFromSystemTime 根据指定的 RFC 格式格式化日期和时间\n\n⊙ InternetTimeToSystemTime 将一个 HTTP 时间/日期字串格式化为 SystemTime 结构对象\n\n⊙ InternetConfirmZoneCrossing 检查在安全 URL 和非安全 URL 间的变化\n\n⊙ InternetCloseHandle 关闭一个单一的 Internet 句柄\n\n⊙ InternetErrorDlg 显示错误信息对话框\n\n⊙ InternetGetLastResponesInfo 获取最近发送的 API函数的错误\n\n2、HTTP 处理函数\n\n⊙ HttpOpenRequest 打开一个 HTTP 请求的句柄\n\n⊙ HttpSendRequert(Ex) 向 HTTP 服务器发送指定的请求\n\n⊙ HttpQueryInfo 查询有关一次 HTTP 请求的信息\n\n⊙ HttpEndRequest 结束一个 HTTP 请求\n\n⊙ HttpAddRequestHeaders 添加一个或多个 HTTP 请求报头到 HTTP请求句柄\n\n3、FTP 处理函数\n\n⊙ FtpCreateDirectory 在 Ftp 服务器新建一个目录\n\n⊙ FtpDelectFile 删除存储在 Ftp 服务器上的文件\n\n⊙ FtpFindFirstFile 查找给定 Ftp 会话中的指定目录\n\n⊙ FtpGetCurrentDirectory 为指定 Ftp 会话获取当前目录\n\n⊙ FtpGetFile 从 Ftp 服务器下载文件\n\n⊙ FtpOpenFile 访问一个远程文件以对其进行读写\n\n⊙ FtpPutFile 向 Ftp 服务器上传文件\n\n⊙ FtpRemoveDirectory 在 Ftp 服务器删除指定的文件\n\n⊙ FtpRenameFile 为 Ftp 服务器上的指定文件改名\n\n⊙ FtpSetCurrentDirectory 更改在 Ftp 服务器上正在使用的目录"]],[471,471],[2278,2278]]],[1561427228027,["yongchao@yongchao-PC",[[-1,473,"#"]],[474,474],[473,473]]],[1561427320241,["yongchao@yongchao-PC",[[1,2279,"## WinInet 层关系\n\n[编辑](javascript:;)\n\n1、WinInet 是一个[网络编程](https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B)接口，包含了 Internet 底层协议 HTTP，FTP。\n\n2、借助 WinInet 接口，可不必去了解 Winsock、TCP/IP 和特定 Internet 协议\n\n的细节就可以编写出高水平的 Internet 客户端程序。\n\n3、WinInet 为 HTTP、FTP 提供了统一的函数集，也就是 Win32 API 接口。\n\n4、WinInet 简化了 HTTP、FTP 协议的编程，可轻松地将 Internet 集成到应用程序中。\n\n### Hinternet 句柄的层次关系\n\n1、首先通过 [InternetOpen](https://baike.baidu.com/item/InternetOpen) 函数创建位于根部的 Hinternet 句柄，\n\n然后才能通过其进一步建立 HTTP、FTP 的连接。\n\n2、使用 InternetConnect 函数创建一个指定的连接，它将通过传递给它的参数为指定的\n\n站点初始化 HTTP、FTP 连接并创建一个从根句柄分支出去的 Hinernet 句柄。\n\n3、[HttpOpenRequest](https://baike.baidu.com/item/HttpOpenRequest) 和 FtpOpenFile、FtpFindFirstFile等函数将使用 InternetConnect\n\n所创建的句柄以建立到指定站点的连接。\n\n### HTTP 函数层次关系\n\n1、对于 WWW 服务器提供的资源可以直接通过 [InternetOpenUrl](https://baike.baidu.com/item/InternetOpenUrl) 或是 HTTP 函数对潜在\n\n的协议进行处理来访问。\n\n2、由于 HTTP 协议是在不断发展的，当这些底层协议被更新后也将影响这些 HTTP 函数行为\n\n3、[InternetOpen](https://baike.baidu.com/item/InternetOpen)、InternetConnect、[HttpOpenRequest](https://baike.baidu.com/item/HttpOpenRequest) 将返回 Hinternet 句柄，而\n\nHttpAddRequestHeaders、HttpQueryInfo、HttpSendRequest、HttpSendRequestEx、\n\nInternetErrorDlg 将使用它们所依靠的这些函数创建的 Hinternet句柄。\n\n### FTP 函数层次关系\n\n1、FTP 函数需要请求得到特定类型的 Hinternet句柄才能正常工作，这些句柄的创建\n\n必须按一定次序来进行：\n\n1、首先使用 [InternetOpen](https://baike.baidu.com/item/InternetOpen) 创建根句柄，然后才能通过 InternetConnect 创建一个\n\nFTP连接句柄\n\n2、该图展示了依赖于 InternetConnect 所返回FTP 连接句柄的 FTP函数之间的层次关系。"]],[2279,2279],[3701,3701]]],[1561427324228,["yongchao@yongchao-PC",[[-1,2295,"[编辑](javascript:;)"]],[2295,2313],[2295,2295]]],[1561427324604,["yongchao@yongchao-PC",[[-1,2296,"\n"]],[2295,2295],[2294,2294]]],[1561427325267,["yongchao@yongchao-PC",[[-1,2295,"\n"]],[2295,2295],[2294,2294]]],[1561427325556,["yongchao@yongchao-PC",[[-1,2294,"\n"]],[2294,2294],[2293,2293]]],[1561427326476,["yongchao@yongchao-PC",[[1,2294,"\n"]],[2293,2293],[2294,2294]]],[1561427340869,["yongchao@yongchao-PC",[[1,3682,"\n"]],[3681,3681],[3682,3682]]],[1561427341765,["yongchao@yongchao-PC",[[1,3683,"\n"]],[3682,3682],[3683,3683]]],[1561427351156,["yongchao@yongchao-PC",[[1,3683,"### 典型的 HTTP 客户端程序的处理流程"]],[3683,3683],[3706,3706]]],[1561427352612,["yongchao@yongchao-PC",[[1,3707,"\n"]],[3706,3706],[3707,3707]]],[1561427365525,["yongchao@yongchao-PC",[[1,3707,"1、目的：开始 HTTP会话，建立 HTTP 连接\n\n方法：InetrnetOpen、\n\nInternetAttemptConnect\n\nInternetConnect\n\n结果：初始化 WinInet.dll 并联接服务器，返回相应的句柄"]],[3707,3707],[3826,3826]]],[1561427372995,["yongchao@yongchao-PC",[[-1,3751,"\n"]],[3751,3751],[3750,3750]]],[1561427374516,["yongchao@yongchao-PC",[[-1,3750,"\n"]],[3751,3751],[3750,3750]]],[1561427376027,["yongchao@yongchao-PC",[[-1,3773,"\n"]],[3774,3774],[3773,3773]]],[1561427376539,["yongchao@yongchao-PC",[[-1,3772,"\n"]],[3773,3773],[3772,3772]]],[1561427377618,["yongchao@yongchao-PC",[[1,3772,"\\"]],[3772,3772],[3773,3773]]],[1561427378771,["yongchao@yongchao-PC",[[-1,3772,"\\"]],[3773,3773],[3772,3772]]],[1561427379858,["yongchao@yongchao-PC",[[1,3772,"'"]],[3772,3772],[3773,3773]]],[1561427379914,["yongchao@yongchao-PC",[[-1,3772,"'"],[1,3773,"’"]],[3773,3773],[3773,3773]]],[1561427380579,["yongchao@yongchao-PC",[[-1,3772,"’"]],[3773,3773],[3772,3772]]],[1561427382396,["yongchao@yongchao-PC",[[1,3772,"、"]],[3772,3772],[3773,3773]]],[1561427383524,["yongchao@yongchao-PC",[[-1,3789,"\n"]],[3789,3789],[3788,3788]]],[1561427384771,["yongchao@yongchao-PC",[[-1,3733,"\n"]],[3733,3733],[3732,3732]]],[1561427386500,["yongchao@yongchao-PC",[[1,3822,"\n"]],[3821,3821],[3822,3822]]],[1561427389451,["yongchao@yongchao-PC",[[-1,3618,"\n"]],[3619,3619],[3618,3618]]],[1561427389764,["yongchao@yongchao-PC",[[-1,3617,"\n"]],[3618,3618],[3617,3617]]],[1561427392819,["yongchao@yongchao-PC",[[-1,3505,"\n"]],[3506,3506],[3505,3505]]],[1561427393235,["yongchao@yongchao-PC",[[-1,3504,"\n"]],[3505,3505],[3504,3504]]],[1561427401003,["yongchao@yongchao-PC",[[-1,3322,"\n"]],[3323,3323],[3322,3322]]],[1561427401467,["yongchao@yongchao-PC",[[-1,3321,"\n"]],[3322,3322],[3321,3321]]],[1561427403507,["yongchao@yongchao-PC",[[-1,3392,"\n"]],[3392,3392],[3391,3391]]],[1561427404803,["yongchao@yongchao-PC",[[-1,3391,"\n"]],[3392,3392],[3391,3391]]],[1561427407828,["yongchao@yongchao-PC",[[-1,3100,"\n"]],[3101,3101],[3100,3100]]],[1561427408107,["yongchao@yongchao-PC",[[-1,3099,"\n"]],[3100,3100],[3099,3099]]],[1561427411540,["yongchao@yongchao-PC",[[-1,2794,"\n"]],[2795,2795],[2794,2794]]],[1561427412228,["yongchao@yongchao-PC",[[-1,2793,"\n"]],[2794,2794],[2793,2793]]],[1561427414196,["yongchao@yongchao-PC",[[-1,2716,"\n"]],[2717,2717],[2716,2716]]],[1561427414619,["yongchao@yongchao-PC",[[-1,2715,"\n"]],[2716,2716],[2715,2715]]],[1561427416987,["yongchao@yongchao-PC",[[-1,2467,"\n"]],[2468,2468],[2467,2467]]],[1561427417411,["yongchao@yongchao-PC",[[-1,2466,"\n"]],[2467,2467],[2466,2466]]],[1561427466420,["yongchao@yongchao-PC",[[1,3807,"\n"]],[3806,3806],[3807,3807]]],[1561427466695,["yongchao@yongchao-PC",[[1,3807,"2、目的：创建一个 HTTP请求\n\n方法：[HttpOpenRequest](https://baike.baidu.com/item/HttpOpenRequest)\n\n结果：\n\n3、目的：发送一个 HTTP请示\n\n方法：HttpAddRequestHeaders\n\nHttpSendRequest(Ex)\n\n结果：\n\n4、目的：读文件\n\n方法：InternetReadFile(Ex)\n\n结果：使用你提供的缓冲读指定的字节\n\n5、目的：获取 HTTP请求信息\n\n方法：HttpQueryInfo\n\n结果：从服务器获取 HTTP 请求头信息\n\n6、目的：[异常处理](https://baike.baidu.com/item/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86)\n\n方法：InternetGetLastResponesInfo\n\nInternetErrorDlg\n\n结果：处理所有普通的异常类型\n\n7、目的：结束 HTTP 会话\n\n方法：HttpEndRequest、\n\nInternetCloseHandle\n\n结果：自动清除打开的句柄的连接"]],[3807,3807],[4299,4299]]],[1561427468676,["yongchao@yongchao-PC",[[-1,3824,"\n"]],[3824,3824],[3823,3823]]],[1561427469483,["yongchao@yongchao-PC",[[-1,3891,"\n"]],[3891,3891],[3890,3890]]],[1561427471155,["yongchao@yongchao-PC",[[-1,3913,"\n"]],[3913,3913],[3912,3912]]],[1561427471931,["yongchao@yongchao-PC",[[-1,3938,"\n"]],[3938,3938],[3937,3937]]],[1561427475275,["yongchao@yongchao-PC",[[-1,3958,"\n"]],[3958,3958],[3957,3957]]],[1561427477933,["yongchao@yongchao-PC",[[-1,3972,"\n"]],[3972,3972],[3971,3971]]],[1561427478595,["yongchao@yongchao-PC",[[-1,3996,"\n"]],[3996,3996],[3995,3995]]],[1561427480620,["yongchao@yongchao-PC",[[-1,4032,"\n"]],[4032,4032],[4031,4031]]],[1561427481364,["yongchao@yongchao-PC",[[-1,4049,"\n"]],[4049,4049],[4048,4048]]],[1561427483244,["yongchao@yongchao-PC",[[-1,4150,"\n"]],[4150,4150],[4149,4149]]],[1561427484220,["yongchao@yongchao-PC",[[-1,4186,"r"]],[4187,4187],[4186,4186]]],[1561427486139,["yongchao@yongchao-PC",[[1,4186,"r"]],[4186,4186],[4187,4187]]],[1561427487260,["yongchao@yongchao-PC",[[-1,4181,"\n"]],[4181,4181],[4180,4180]]],[1561427488307,["yongchao@yongchao-PC",[[-1,4180,"\n"]],[4181,4181],[4180,4180]]],[1561427489129,["yongchao@yongchao-PC",[[1,4180,"、"]],[4180,4180],[4181,4181]]],[1561427490756,["yongchao@yongchao-PC",[[-1,4198,"\n"]],[4198,4198],[4197,4197]]],[1561427492083,["yongchao@yongchao-PC",[[-1,4230,"\n"]],[4230,4230],[4229,4229]]],[1561427493203,["yongchao@yongchao-PC",[[-1,4249,"\n"]],[4249,4249],[4248,4248]]],[1561427494507,["yongchao@yongchao-PC",[[-1,4248,"\n"]],[4249,4249],[4248,4248]]],[1561427496003,["yongchao@yongchao-PC",[[-1,4268,"\n"]],[4268,4268],[4267,4267]]],[1561429328286,["yongchao@yongchao-PC",[[1,4284,"\n"]],[4283,4283],[4284,4284]]],[1561429328541,["yongchao@yongchao-PC",[[1,4285,"\n"]],[4284,4284],[4285,4285]]],[1561429328740,["yongchao@yongchao-PC",[[1,4286,"\n"]],[4285,4285],[4286,4286]]],[1561429329140,["yongchao@yongchao-PC",[[1,4286,"### InetrnetOpen 初始化\n\n1、声明：\n\nfunction [InternetOpen](https://baike.baidu.com/item/InternetOpen)(lpszAgent: PChar;\n\ndwAccessType: DWORD;\n\nlpszProxy,\n\nlpszProxyBypass:PChar;\n\ndwFlags: DWORD): HINTERNET; stdcall;\n\n2、参数：\n\n1、lpszAgent 应用程序名，可以自定义\n\n2、dwAccessType 存取类型，可以是：\n\n①INTERNET_OPEN_TYPE_PRECONFIG =0 使用 IE 中的连接设置\n\n②INTERNET_OPEN_TYPE_DIRECT =1 直接连接到服务器\n\n③INTERNET_OPEN_TYPE_PROXY =3 通过[代理服务器](https://baike.baidu.com/item/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8)进行连接\n\n为 3 时需指定代理服务器地址\n\n3、lpszProxy CERN 代理服务器地址，一般设置为 null;\n\n4、lpszProxyBypass 代理服务器地址；\n\n5、dwFlags 标记，一般设置为 0，可以是：\n\n①INTERNET_FLAG_DONT_CACHE 不在缓存中保存取得的内容\n\n②INTERNET_FLAG_OFFLINE [脱机方式](https://baike.baidu.com/item/%E8%84%B1%E6%9C%BA%E6%96%B9%E5%BC%8F)\n\nInternetOpenUrl 打开 Url，读取数据\n\n1、声明：\n\nfunction [InternetOpenUrl](https://baike.baidu.com/item/InternetOpenUrl)(hInet: HINTERNET;\n\nlpszUrl: PChar;\n\nlpszHeaders: PChar;\n\ndwHeadersLength: DWORD;\n\ndwFlags: DWORD;\n\ndwContext: DWORD): HINTERNET; stdcall;\n\n2、参数：\n\n1、hInet 由 [InternetOpen](https://baike.baidu.com/item/InternetOpen) 返回的句柄\n\n2、lpszUrl 文件 Url 地址，以 http：，ftp：打头的 Url 地址；\n\n3、lpszHeaders 发送到服务器的数据头；\n\n4、dwHeadersLength 发送到服务器的数据头长度\n\n5、dwFlags 标记，可以是：\n\n①INTERNET_FLAG_RELOAD 强制重读数据\n\n②INTERNET_FLAG_DONT_CACHE 不保存到缓存\n\n③INTERNET_FLAG_TRANSFER_ASCII 使用文本数据\n\n④INTERNET_FLAG_TRANSFER_BINARY 使用二进制数据\n\n6、dwContext 上下文标记，如果使用回调功能时这个值将传送给[回调函数](https://baike.baidu.com/item/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0)\n\n## Internet 的连接\n\n[编辑](javascript:;)\n\n1、声明：\n\nfunction InternetConnect(hInet: HINTERNET;\n\nlpszServerName: PChar;\n\nnServerPort: INTERNET_PORT;\n\nlpszUsername: PChar;\n\nlpszPassword: PChar;\n\ndwService: DWORD;\n\ndwFlags: DWORD;\n\ndwContext: DWORD): HINTERNET; stdcall;\n\n2、参数：\n\n1、hInet 由 InternetOpen 返回的句柄\n\n2、lpszServerName 服务器的地址\n\nHTTP 地址必须为服务器名作[InternetOpenUrl](https://baike.baidu.com/item/InternetOpenUrl) [语法分析](https://baike.baidu.com/item/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90)\n\n3、nServerPort HTTP协议[端口号](https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B7)（缺省80）\n\n4、lpszUsername 用户名\n\n5、lpszPassword 用户密码\n\n6、dwService 决定服务类型 HTTP，FTP，可以是：\n\n①INTERNET_SERVICE_FTP = 1; 连接到一个 FTP 服务器上\n\n②INTERNET_SERVICE_HTTP = 3; 连接到一个 HTTP 服务器上\n\n7、dwFlags\n\n8、dwContext\n\n### HttpOpenRequest\n\n1、声明：\n\nfunction [HttpOpenRequest](https://baike.baidu.com/item/HttpOpenRequest)(hConnect: HINTERNET;\n\nlpszVerb: PChar;\n\nlpszObjectName: PChar;\n\nlpszVersion: PChar;\n\nlpszReferrer: PChar;\n\nlplpszAcceptTypes: PLPSTR;\n\ndwFlags: DWORD;\n\ndwContext: DWORD): HINTERNET; stdcall;\n\n2、参数：\n\n1、hConnect InternetConnect句柄\n\n2、lpszVerb 命令字，如果为 NULL，使用[缺省值](https://baike.baidu.com/item/%E7%BC%BA%E7%9C%81%E5%80%BC)“GET”\n\n3、lpszObjectName 命令对象，通常是一个文件名、[可执行文件](https://baike.baidu.com/item/%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6)或是一个搜索列表\n\n4、lpszVersion HTTP版本，如果为空，将使用“HTTP/1.0”\n\n5、lpszReferrer 一个网址，可以为空\n\n6、lplpszAcceptTypes中 程序接收的文件类型列表。把[空值](https://baike.baidu.com/item/%E7%A9%BA%E5%80%BC)传给该函数即通知了服务器只有文本文件可以被接收\n\n'application/octet-stream'\n\n7、dwFlags 标志 使用 or 连接标志\n\n①INTERNET_FLAG_NO_CACHE_WRITE 标志不缓冲写\n\n②INTERNET_FLAG_KEEP_CONNECTION 保持连接\n\n③INTERNET_FLAG_SECURE { use PCT/SSL if applicable (HTTP) }\n\n{ Security Ignore Flags, Allow [HttpOpenRequest](https://baike.baidu.com/item/HttpOpenRequest) to overide\n\nSecure Channel (SSL/PCT) failures of the following types. }\n\n④INTERNET_FLAG_IGNORE_CERT_CN_INVALID { bad common name in X509 Cert. }\n\n⑤INTERNET_FLAG_IGNORE_CERT_DATE_INVALID { expired X509 Cert. }\n\n8、dwContext Integer(Self)？\n\n### 向 HTTP 服务器发送指定的请求\n\n1、声明：\n\nfunction HttpSendRequest(hRequest: HINTERNET;\n\nlpszHeaders: PChar;\n\ndwHeadersLength: DWORD;\n\nlpOptional: Pointer;\n\ndwOptionalLength: DWORD): BOOL; stdcall;\n\n2、参数：\n\n1、hRequest [HttpOpenRequest](https://baike.baidu.com/item/HttpOpenRequest)句柄\n\n2、lpszHeaders 服务请求的数据头\n\n3、dwHeadersLength 服务请求的数据头的长度\n\n4、lpOptional 紧跟在标题后任意数据的地址，此参数一般用于 POST 和 PUT 操作\n\n5、dwOptionalLength 数据的长度\n\nInternetSetOption 设置一个 Internet 选项\n\n1、声明\n\nfunction InternetSetOption(hInet: HINTERNET;\n\ndwOption: DWORD;\n\nlpBuffer: Pointer;\n\ndwBufferLength: DWORD): BOOL; stdcall;\n\n2、参数：\n\n1、hInet 句柄\n\n2、dwOption Internet 选项，可以是：\n\n①INTERNET_OPTION_SEND_TIMEOUT 设置，发送请求和连接时的超时时间\n\n②INTERNET_OPTION_RECEIVE_TIMEOUT 设置，接收请求和连接时的超时间间\n\n3、lpBuffer 值\n\n4、dwBufferLength 值大小"]],[4286,4286],[8469,8469]]],[1561429344781,["yongchao@yongchao-PC",[[-1,4337,"](https://baike.baidu.com/item/InternetOpen)"]],[4337,4381],[4337,4337]]],[1561429346421,["yongchao@yongchao-PC",[[-1,4324,"["]],[4325,4325],[4324,4324]]],[1561429351237,["yongchao@yongchao-PC",[[-1,4355,"\n"]],[4355,4355],[4354,4354]]],[1561429352092,["yongchao@yongchao-PC",[[-1,4376,"\n"]],[4376,4376],[4375,4375]]],[1561429352700,["yongchao@yongchao-PC",[[-1,4387,"\n"]],[4387,4387],[4386,4386]]],[1561429354253,["yongchao@yongchao-PC",[[-1,4410,"\n"]],[4410,4410],[4409,4409]]],[1561429367925,["yongchao@yongchao-PC",[[-1,4314,"\n"]],[4314,4314],[4313,4313]]],[1561429369830,["yongchao@yongchao-PC",[[-1,4453,"\n"]],[4453,4453],[4452,4452]]],[1561429370852,["yongchao@yongchao-PC",[[-1,4484,"c"]],[4485,4485],[4484,4484]]],[1561429372472,["yongchao@yongchao-PC",[[1,4484,"c"]],[4484,4484],[4485,4485]]],[1561429374397,["yongchao@yongchao-PC",[[-1,4477,"\n"]],[4477,4477],[4476,4476]]],[1561429375972,["yongchao@yongchao-PC",[[-1,4549,"\n"]],[4549,4549],[4548,4548]]],[1561429376693,["yongchao@yongchao-PC",[[-1,4588,"\n"]],[4588,4588],[4587,4587]]],[1561429389668,["yongchao@yongchao-PC",[[-1,4625,"](https://baike.baidu.com/item/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8)"]],[4626,4702],[4625,4625]]],[1561429391420,["yongchao@yongchao-PC",[[-1,4620,"代理"]],[4620,4622],[4620,4620]]],[1561429392891,["yongchao@yongchao-PC",[[1,4620,"代理"]],[4620,4620],[4620,4622]]],[1561429394604,["yongchao@yongchao-PC",[[-1,4619,"["]],[4620,4620],[4619,4619]]],[1561429398172,["yongchao@yongchao-PC",[[-1,4629,"\n"]],[4629,4629],[4628,4628]]],[1561429401221,["yongchao@yongchao-PC",[[-1,4502,"\n"]],[4502,4502],[4501,4501]]],[1561429402453,["yongchao@yongchao-PC",[[-1,4682,"\n"]],[4682,4682],[4681,4681]]],[1561429403372,["yongchao@yongchao-PC",[[-1,4709,"\n"]],[4709,4709],[4708,4708]]],[1561429406405,["yongchao@yongchao-PC",[[-1,4775,"\n"]],[4775,4775],[4774,4774]]],[1561429409613,["yongchao@yongchao-PC",[[-1,4803,"](https://baike.baidu.com/item/%E8%84%B1%E6%9C%BA%E6%96%B9%E5%BC%8F)"]],[4804,4871],[4803,4803]]],[1561429412516,["yongchao@yongchao-PC",[[-1,4797," ["]],[4799,4799],[4797,4797]]],[1561429414235,["yongchao@yongchao-PC",[[1,4797," "]],[4797,4797],[4798,4798]]],[1561429432989,["yongchao@yongchao-PC",[[1,4804,"\n"]],[4803,4803],[4804,4804]]],[1561429434068,["yongchao@yongchao-PC",[[-1,4833,"\n"]],[4833,4833],[4832,4832]]],[1561429440231,["yongchao@yongchao-PC",[[-1,4314,"function "],[1,4323,"#"]],[4314,4314],[4315,4315]]],[1561429441249,["yongchao@yongchao-PC",[[1,4315,"### "]],[4315,4315],[4319,4319]]],[1561429444172,["yongchao@yongchao-PC",[[-1,4308,"1、声明："]],[4308,4313],[4308,4308]]],[1561429445340,["yongchao@yongchao-PC",[[-1,4308,"\n"]],[4308,4308],[4307,4307]]],[1561429447644,["yongchao@yongchao-PC",[[-1,4437,"2、"]],[4437,4439],[4437,4437]]],[1561429454023,["yongchao@yongchao-PC",[[1,4793,"#### "]],[4793,4793],[4798,4798]]],[1561429458877,["yongchao@yongchao-PC",[[-1,4826,"1、声明：\n\nfunction ["]],[4826,4843],[4826,4826]]],[1561429462380,["yongchao@yongchao-PC",[[-1,4841,"](https://baike.baidu.com/item/InternetOpenUrl)"]],[4841,4888],[4841,4841]]],[1561429463548,["yongchao@yongchao-PC",[[-1,4860,"\n"]],[4860,4860],[4859,4859]]],[1561429464125,["yongchao@yongchao-PC",[[-1,4876,"\n"]],[4876,4876],[4875,4875]]],[1561429464773,["yongchao@yongchao-PC",[[-1,4896,"\n"]],[4896,4896],[4895,4895]]],[1561429465437,["yongchao@yongchao-PC",[[-1,4920,"\n"]],[4920,4920],[4919,4919]]],[1561429466102,["yongchao@yongchao-PC",[[-1,4936,"\n"]],[4936,4936],[4935,4935]]],[1561429470896,["yongchao@yongchao-PC",[[1,4814," 你"]],[4814,4814],[4816,4816]]],[1561429471596,["yongchao@yongchao-PC",[[-1,4815,"你"]],[4816,4816],[4815,4815]]],[1561429471953,["yongchao@yongchao-PC",[[1,4815," "]],[4815,4815],[4816,4816]]],[1561429493237,["yongchao@yongchao-PC",[[-1,5059,"\n"]],[5059,5059],[5058,5058]]],[1561429496853,["yongchao@yongchao-PC",[[-1,5008,"](https://baike.baidu.com/item/InternetOpen) "]],[5008,5053],[5008,5008]]],[1561429497900,["yongchao@yongchao-PC",[[-1,4995,"["]],[4996,4996],[4995,4995]]],[1561429499372,["yongchao@yongchao-PC",[[-1,5057,"\n"]],[5057,5057],[5056,5056]]],[1561429500124,["yongchao@yongchao-PC",[[-1,5083,"\n"]],[5083,5083],[5082,5082]]],[1561429500693,["yongchao@yongchao-PC",[[-1,5114,"\n"]],[5114,5114],[5113,5113]]],[1561429501372,["yongchao@yongchao-PC",[[-1,5132,"\n"]],[5132,5132],[5131,5131]]],[1561429501972,["yongchao@yongchao-PC",[[-1,5161,"\n"]],[5161,5161],[5160,5160]]],[1561429502596,["yongchao@yongchao-PC",[[-1,5194,"\n"]],[5194,5194],[5193,5193]]],[1561429503268,["yongchao@yongchao-PC",[[-1,5231,"\n"]],[5231,5231],[5230,5230]]],[1561429505284,["yongchao@yongchao-PC",[[-1,5270,"\n"]],[5270,5270],[5269,5269]]],[1561429509325,["yongchao@yongchao-PC",[[-1,5309,"](https://baike.baidu.com/item/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0)"]],[5309,5377],[5309,5309]]],[1561429510372,["yongchao@yongchao-PC",[[-1,5304,"["]],[5305,5305],[5304,5304]]],[1561429520037,["yongchao@yongchao-PC",[[-1,5327,"[编辑](javascript:;)\n"]],[5327,5346],[5327,5327]]],[1561429521615,["yongchao@yongchao-PC",[[1,5312,"#"]],[5312,5312],[5313,5313]]],[1561429534068,["yongchao@yongchao-PC",[[-1,5328,"\n"]],[5328,5328],[5327,5327]]],[1561429539230,["yongchao@yongchao-PC",[[-1,5328,"1、声明：\n\nfunction "],[1,5344,"#"]],[5328,5328],[5329,5329]]],[1561429540584,["yongchao@yongchao-PC",[[1,5329,"### "]],[5329,5329],[5333,5333]]],[1561429545557,["yongchao@yongchao-PC",[[1,5367,"InternetConnect(hInet: HINTERNET;"]],[5367,5367],[5400,5400]]],[1561429547188,["yongchao@yongchao-PC",[[-1,5348,"(hInet: HINTERNET;"]],[5348,5366],[5348,5348]]],[1561429547961,["yongchao@yongchao-PC",[[1,5348," "]],[5348,5348],[5349,5349]]],[1561429549117,["yongchao@yongchao-PC",[[-1,5407,"\n"]],[5407,5407],[5406,5406]]],[1561429549702,["yongchao@yongchao-PC",[[-1,5435,"\n"]],[5435,5435],[5434,5434]]],[1561429550213,["yongchao@yongchao-PC",[[-1,5456,"\n"]],[5456,5456],[5455,5455]]],[1561429550748,["yongchao@yongchao-PC",[[-1,5477,"\n"]],[5477,5477],[5476,5476]]],[1561429551312,["yongchao@yongchao-PC",[[-1,5495,"\n"]],[5495,5495],[5494,5494]]],[1561429551860,["yongchao@yongchao-PC",[[-1,5511,"\n"]],[5511,5511],[5510,5510]]],[1561429557700,["yongchao@yongchao-PC",[[-1,5551,"2、"]],[5551,5553],[5551,5551]]],[1561429558308,["yongchao@yongchao-PC",[[-1,5555,"\n"]],[5555,5555],[5554,5554]]],[1561429558852,["yongchao@yongchao-PC",[[-1,5584,"\n"]],[5584,5584],[5583,5583]]],[1561429559445,["yongchao@yongchao-PC",[[-1,5608,"\n"]],[5608,5608],[5607,5607]]],[1561429560333,["yongchao@yongchao-PC",[[-1,5761,"\n"]],[5761,5761],[5760,5760]]],[1561429578597,["yongchao@yongchao-PC",[[-1,5692,"](https://baike.baidu.com/item/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90)"]],[5692,5760],[5692,5692]]],[1561429583181,["yongchao@yongchao-PC",[[-1,5639,"](https://baike.baidu.com/item/InternetOpenUrl) ["]],[5639,5688],[5639,5639]]],[1561429584103,["yongchao@yongchao-PC",[[-1,5623,"["]],[5624,5624],[5623,5623]]],[1561429585668,["yongchao@yongchao-PC",[[-1,5667,"]"]],[5667,5668],[5667,5667]]],[1561429586644,["yongchao@yongchao-PC",[[-1,5663,"["]],[5664,5664],[5663,5663]]],[1561429590476,["yongchao@yongchao-PC",[[-1,5665,"号(https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B7)"]],[5666,5724],[5665,5665]]],[1561429592284,["yongchao@yongchao-PC",[[1,5665,"号(https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B7)"]],[5665,5665],[5666,5724]]],[1561429593892,["yongchao@yongchao-PC",[[-1,5666,"(https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B7)"]],[5666,5724],[5666,5666]]],[1561429595998,["yongchao@yongchao-PC",[[-1,5673,"\n"]],[5673,5673],[5672,5672]]],[1561429596685,["yongchao@yongchao-PC",[[-1,5692,"\n"]],[5692,5692],[5691,5691]]],[1561429597316,["yongchao@yongchao-PC",[[-1,5712,"\n"]],[5712,5712],[5711,5711]]],[1561429598261,["yongchao@yongchao-PC",[[-1,5745,"\n"]],[5745,5745],[5744,5744]]],[1561429599029,["yongchao@yongchao-PC",[[-1,5787,"\n"]],[5787,5787],[5786,5786]]],[1561429600245,["yongchao@yongchao-PC",[[-1,5831,"\n"]],[5831,5831],[5830,5830]]],[1561429601060,["yongchao@yongchao-PC",[[-1,5841,"\n"]],[5841,5841],[5840,5840]]],[1561429606951,["yongchao@yongchao-PC",[[1,5857,"#"]],[5857,5857],[5858,5858]]],[1561429610564,["yongchao@yongchao-PC",[[-1,5876,"1、声明：\n"]],[5876,5882],[5876,5876]]],[1561429610908,["yongchao@yongchao-PC",[[-1,5876,"\n"]],[5876,5876],[5875,5875]]],[1561429611212,["yongchao@yongchao-PC",[[-1,5875,"\n"]],[5875,5875],[5874,5874]]],[1561429613717,["yongchao@yongchao-PC",[[-1,5875,"function ["]],[5875,5885],[5875,5875]]],[1561429617324,["yongchao@yongchao-PC",[[-1,5890,"](https://baike.baidu.com/item/HttpOpenRequest)"]],[5890,5937],[5890,5890]]],[1561429618605,["yongchao@yongchao-PC",[[-1,5912,"\n"]],[5912,5912],[5911,5911]]],[1561429619149,["yongchao@yongchao-PC",[[-1,5929,"\n"]],[5929,5929],[5928,5928]]],[1561429619700,["yongchao@yongchao-PC",[[-1,5952,"\n"]],[5952,5952],[5951,5951]]],[1561429620213,["yongchao@yongchao-PC",[[-1,5972,"\n"]],[5972,5972],[5971,5971]]],[1561429620852,["yongchao@yongchao-PC",[[-1,5993,"\n"]],[5993,5993],[5992,5992]]],[1561429621460,["yongchao@yongchao-PC",[[-1,6020,"\n"]],[6020,6020],[6019,6019]]],[1561429622012,["yongchao@yongchao-PC",[[-1,6036,"\n"]],[6036,6036],[6035,6035]]],[1561429625502,["yongchao@yongchao-PC",[[-1,6076,"2、"]],[6076,6078],[6076,6076]]],[1561429626172,["yongchao@yongchao-PC",[[-1,6080,"\n"]],[6080,6080],[6079,6079]]],[1561429627076,["yongchao@yongchao-PC",[[-1,6109,"\n"]],[6109,6109],[6108,6108]]],[1561429631093,["yongchao@yongchao-PC",[[-1,6139,"](https://baike.baidu.com/item/%E7%BC%BA%E7%9C%81%E5%80%BC)"]],[6139,6198],[6139,6139]]],[1561429632445,["yongchao@yongchao-PC",[[-1,6135,"["]],[6136,6136],[6135,6135]]],[1561429634054,["yongchao@yongchao-PC",[[-1,6144,"\n"]],[6144,6144],[6143,6143]]],[1561429639428,["yongchao@yongchao-PC",[[-1,6181,"](https://baike.baidu.com/item/%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6)"]],[6182,6258],[6181,6181]]],[1561429640244,["yongchao@yongchao-PC",[[-1,6175,"["]],[6176,6176],[6175,6175]]],[1561429642628,["yongchao@yongchao-PC",[[-1,6189,"\n"]],[6189,6189],[6188,6188]]],[1561429643548,["yongchao@yongchao-PC",[[-1,6229,"\n"]],[6229,6229],[6228,6228]]],[1561429648653,["yongchao@yongchao-PC",[[-1,6254,"\n"]],[6254,6254],[6253,6253]]],[1561429651805,["yongchao@yongchao-PC",[[-1,6291,"](https://baike.baidu.com/item/%E7%A9%BA%E5%80%BC)"]],[6291,6341],[6291,6291]]],[1561429652917,["yongchao@yongchao-PC",[[-1,6288,"["]],[6289,6289],[6288,6288]]],[1561429654565,["yongchao@yongchao-PC",[[-1,6314,"\n"]],[6314,6314],[6313,6313]]],[1561429656125,["yongchao@yongchao-PC",[[-1,6313,"\n"]],[6314,6314],[6313,6313]]],[1561429657276,["yongchao@yongchao-PC",[[-1,6340,"\n"]],[6340,6340],[6339,6339]]],[1561429658220,["yongchao@yongchao-PC",[[-1,6364,"\n"]],[6364,6364],[6363,6363]]],[1561429659005,["yongchao@yongchao-PC",[[-1,6401,"\n"]],[6401,6401],[6400,6400]]],[1561429660172,["yongchao@yongchao-PC",[[-1,6437,"\n"]],[6437,6437],[6436,6436]]],[1561429662197,["yongchao@yongchao-PC",[[-1,6496,"\n"]],[6496,6496],[6495,6495]]],[1561429666071,["yongchao@yongchao-PC",[[-1,6543,"](https://baike.baidu.com/item/HttpOpenRequest) "]],[6543,6591],[6543,6543]]],[1561429667533,["yongchao@yongchao-PC",[[-1,6527,"["]],[6528,6528],[6527,6527]]],[1561429669012,["yongchao@yongchao-PC",[[1,6542," "]],[6542,6542],[6543,6543]]],[1561429674166,["yongchao@yongchao-PC",[[-1,6554,"\n"]],[6554,6554],[6553,6553]]],[1561429675573,["yongchao@yongchao-PC",[[-1,6614,"\n"]],[6614,6614],[6613,6613]]],[1561429676364,["yongchao@yongchao-PC",[[-1,6686,"\n"]],[6686,6686],[6685,6685]]],[1561429679044,["yongchao@yongchao-PC",[[-1,6749,"\n"]],[6749,6749],[6748,6748]]],[1561429683666,["yongchao@yongchao-PC",[[1,6780,"#"]],[6780,6780],[6781,6781]]],[1561429707779,["yongchao@yongchao-PC",[[1,6782,"\n"]],[6782,6782],[6783,6783]]],[1561429709165,["yongchao@yongchao-PC",[[-1,6782,"\n"]],[6783,6783],[6782,6782]]],[1561429710724,["yongchao@yongchao-PC",[[-1,6780,"# "]],[6782,6782],[6780,6780]]],[1561429711244,["yongchao@yongchao-PC",[[1,6780," "]],[6780,6780],[6781,6781]]],[1561429742893,["yongchao@yongchao-PC",[[-1,6800,"1、声明：\n"]],[6800,6806],[6800,6800]]],[1561429745044,["yongchao@yongchao-PC",[[-1,6800,"\nfunction "]],[6800,6810],[6800,6800]]],[1561429745788,["yongchao@yongchao-PC",[[-1,6799,"\n"]],[6800,6800],[6799,6799]]],[1561429746669,["yongchao@yongchao-PC",[[-1,6836,"\n"]],[6836,6836],[6835,6835]]],[1561429747389,["yongchao@yongchao-PC",[[-1,6856,"\n"]],[6856,6856],[6855,6855]]],[1561429748252,["yongchao@yongchao-PC",[[-1,6880,"\n"]],[6880,6880],[6879,6879]]],[1561429749341,["yongchao@yongchao-PC",[[1,6799,"\n"]],[6799,6799],[6800,6800]]],[1561429750381,["yongchao@yongchao-PC",[[-1,6902,"\n"]],[6902,6902],[6901,6901]]],[1561429751982,["yongchao@yongchao-PC",[[-1,6944,"2、"]],[6946,6946],[6944,6944]]],[1561429752829,["yongchao@yongchao-PC",[[-1,6948,"\n"]],[6948,6948],[6947,6947]]],[1561429753613,["yongchao@yongchao-PC",[[-1,7025,"\n"]],[7025,7025],[7024,7024]]],[1561429754245,["yongchao@yongchao-PC",[[-1,7048,"\n"]],[7048,7048],[7047,7047]]],[1561429754805,["yongchao@yongchao-PC",[[-1,7078,"\n"]],[7078,7078],[7077,7077]]],[1561429755581,["yongchao@yongchao-PC",[[-1,7127,"\n"]],[7127,7127],[7126,7126]]],[1561429763453,["yongchao@yongchao-PC",[[-1,6975,"](https://baike.baidu.com/item/HttpOpenRequest)"]],[6975,7022],[6975,6975]]],[1561429765340,["yongchao@yongchao-PC",[[-1,6959,"["]],[6960,6960],[6959,6959]]],[1561429780734,["yongchao@yongchao-PC",[[1,6799,"#### HttpSendRequest"]],[6799,6799],[6819,6819]]],[1561429783711,["yongchao@yongchao-PC",[[1,7125,"\n"]],[7124,7124],[7125,7125]]],[1561429788630,["yongchao@yongchao-PC",[[1,7125,"####InternetSetOption "]],[7125,7125],[7147,7147]]],[1561429790246,["yongchao@yongchao-PC",[[1,7129," "]],[7129,7129],[7130,7130]]],[1561429793974,["yongchao@yongchao-PC",[[-1,7185,"1、声明\n"]],[7185,7190],[7185,7185]]],[1561429794333,["yongchao@yongchao-PC",[[-1,7185,"\n"]],[7185,7185],[7184,7184]]],[1561429795229,["yongchao@yongchao-PC",[[-1,7184,"\n"]],[7184,7184],[7183,7183]]],[1561429797836,["yongchao@yongchao-PC",[[-1,7184,"function "]],[7185,7193],[7184,7184]]],[1561429798909,["yongchao@yongchao-PC",[[1,7184,"\n"]],[7184,7184],[7185,7185]]],[1561429799773,["yongchao@yongchao-PC",[[1,7222,"\n"]],[7221,7221],[7222,7222]]],[1561429800589,["yongchao@yongchao-PC",[[-1,7222,"\n"]],[7222,7222],[7221,7221]]],[1561429800820,["yongchao@yongchao-PC",[[-1,7221,"\n"]],[7221,7221],[7220,7220]]],[1561429801557,["yongchao@yongchao-PC",[[-1,7238,"\n"]],[7238,7238],[7237,7237]]],[1561429802316,["yongchao@yongchao-PC",[[-1,7257,"\n"]],[7257,7257],[7256,7256]]],[1561429804733,["yongchao@yongchao-PC",[[-1,7297,"2、"]],[7297,7299],[7297,7297]]],[1561429805877,["yongchao@yongchao-PC",[[-1,7301,"\n"]],[7301,7301],[7300,7300]]],[1561429806782,["yongchao@yongchao-PC",[[-1,7312,"\n"]],[7312,7312],[7311,7311]]],[1561429807877,["yongchao@yongchao-PC",[[-1,7340,"\n"]],[7340,7340],[7339,7339]]],[1561429809029,["yongchao@yongchao-PC",[[-1,7387,"\n"]],[7387,7387],[7386,7386]]],[1561429809965,["yongchao@yongchao-PC",[[-1,7437,"\n"]],[7437,7437],[7436,7436]]],[1561429810829,["yongchao@yongchao-PC",[[-1,7450,"\n"]],[7450,7450],[7449,7449]]],[1561431209807,["yongchao@yongchao-PC",[[-1,4723,"\n"]],[4723,4723],[4722,4722]]],[1561432099472,["yongchao@yongchao-PC",[[-1,6273," "]],[6274,6274],[6273,6273]]],[1561455416916,["yongchao@yongchao-PC",[[1,7469,"\n"]],[7468,7468],[7469,7469]]],[1561455418349,["yongchao@yongchao-PC",[[1,7470,"\n"]],[7469,7469],[7470,7470]]],[1561455418524,["yongchao@yongchao-PC",[[1,7471,"\n"]],[7470,7470],[7471,7471]]],[1561455418732,["yongchao@yongchao-PC",[[1,7472,"\n"]],[7471,7471],[7472,7472]]],[1561455418867,["yongchao@yongchao-PC",[[1,7473,"\n"]],[7472,7472],[7473,7473]]],[1561455418940,["yongchao@yongchao-PC",[[1,7474,"\n"]],[7473,7473],[7474,7474]]],[1561455419028,["yongchao@yongchao-PC",[[1,7475,"\n"]],[7474,7474],[7475,7475]]],[1561455422534,["yongchao@yongchao-PC",[[-1,7475,"\n"],[1,7476,"#"]],[7475,7475],[7476,7476]]],[1561455423827,["yongchao@yongchao-PC",[[1,7476,"https://docs.microsoft.com/en-us/windows/desktop/winhttp/porting-wininet-applications-to-winhttp"]],[7476,7476],[7572,7572]]],[1561455429685,["yongchao@yongchao-PC",[[1,7476,"\n"]],[7476,7476],[7477,7477]]],[1561455435368,["yongchao@yongchao-PC",[[1,7476," WinHTTP"]],[7476,7476],[7484,7484]]],[1561455446194,["yongchao@yongchao-PC",[[1,7581,"\n\n"]],[7581,7581],[7582,7582]]],[1561455446752,["yongchao@yongchao-PC",[[-1,7582,"\n"],[1,7583,"#"]],[7582,7582],[7583,7583]]],[1561455447828,["yongchao@yongchao-PC",[[1,7583,"# "]],[7583,7583],[7585,7585]]],[1561455448535,["yongchao@yongchao-PC",[[1,7585,"\n\n"]],[7585,7585],[7586,7586]]],[1561473217173,["yongchao@yongchao-PC",[[-1,7586,"\n"],[1,7587,"·"]],[7586,7586],[7587,7587]]],[1561473219473,["yongchao@yongchao-PC",[[1,7587,"··"]],[7587,7587],[7589,7589]]],[1561473221613,["yongchao@yongchao-PC",[[-1,7587,"··"]],[7589,7589],[7587,7587]]],[1561473221900,["yongchao@yongchao-PC",[[-1,7586,"·"],[1,7587,"\n"]],[7587,7587],[7586,7586]]],[1561473224041,["yongchao@yongchao-PC",[[-1,7586,"\n"],[1,7587,"·"]],[7586,7586],[7587,7587]]],[1561473225555,["yongchao@yongchao-PC",[[-1,7586,"·"],[1,7587,"\n"]],[7587,7587],[7586,7586]]],[1561473227153,["yongchao@yongchao-PC",[[-1,7586,"\n"],[1,7587,"`"]],[7586,7586],[7587,7587]]],[1561473228075,["yongchao@yongchao-PC",[[1,7587,"``"]],[7587,7587],[7589,7589]]],[1561473228171,["yongchao@yongchao-PC",[[1,7589,"language\n```\n"]],[7589,7589],[7589,7597]]],[1561473228971,["yongchao@yongchao-PC",[[-1,7589,"language"],[1,7597,"\n"]],[7589,7597],[7590,7590]]],[1561473229925,["yongchao@yongchao-PC",[[1,7590,"\tif(!bRequest && GetLastError() == ERROR_INTERNET_INVALID_CA)\n\t{\n\t\t//DWORD dwFlags = 0;\n\t\tDWORD dwBuffLen = sizeof(dwFlags);\n\n\t\tWinHttpQueryOption(hOpenRequest, INTERNET_OPTION_SECURITY_FLAGS, (LPVOID)& dwFlags, &dwBuffLen);\n\t\tdwFlags |= SECURITY_FLAG_IGNORE_UNKNOWN_CA;\n\t\tWinHttpSetOption(hOpenRequest, INTERNET_OPTION_SECURITY_FLAGS, & dwFlags, sizeof(dwFlags));\n\t\tbRequest = WinHttpSendRequest(hOpenRequest, NULL, 0, NULL, 0); //发送http请求\n\t}\n"]],[7590,7590],[8034,8034]]],[1561473243837,["yongchao@yongchao-PC",[[-1,7591,"if(!b"],[1,7596,"BOOL  bResults = FALSE;\n    HINTERNET hSession = NULL,\n              hConnect = NULL,\n              h"],[-1,7604,"&& GetLastError() == ERROR_INTERNET_INVALID_CA)\n\t{\n\t\t//DWORD dwFlags = 0;\n\t\tDWORD dwBuffLen"],[1,7695,"= NULL;\n\n    // Use WinHttpOpen to obtain a session handle.\n    hSession = WinHttpOpen(  L\"A WinHTTP Example Program/1.0\", \n                             WINHTTP_ACCESS_TYPE_DEFAULT_PROXY,\n                             WINHTTP_NO_PROXY_NAME, \n                             WINHTTP_NO_PROXY_BYPASS, 0);\n\n    // Specify an HTTP server.\n    if (hSession)\n        hConnect"],[1,7698,"WinHttpConnect( hSes"],[-1,7700,"zeof(dwFlags"],[1,7712,"on, L\"www.wingtiptoys.com\",\n                                   INTERNET_DEFAULT_HTTP_PORT, 0"],[-1,7716,"\t\tWinHttpQueryOption(h"],[1,7738,"    // Create an HTTP Request handle.\n    if (hConnect)\n        hRequest = WinHttp"],[1,7749,"( hConnect"],[1,7751,"L\"PUT\", \n                                       L\"/writetst.txt\", \n                                       NULL, W"],[-1,7753,"TERNET_OPTION_SECURITY_FLAGS, (LPVOID)& dwFlags, &dwBuffLen);\n\t\tdwFlag"],[1,7823,"HTTP_NO_REFERER, \n                                       WINHTTP_DEFAULT_ACCEPT_TYPES,\n                                       0);\n\n    // Send a Request.\n    if (hRequest) \n        bResult"],[-1,7825,"|"],[-1,7828,"SECURITY_FLAG_IGNORE_UNKNOWN_CA;\n\t\t"],[-1,7872,"tOptio"],[1,7879,"dRequest"],[1,7880," "],[-1,7881,"Open"],[1,7894,"\n                                       W"],[-1,7896,"TERNET_OP"],[1,7905,"HTTP_NO_ADDI"],[-1,7909,"_SECURITY_FLAGS, & dwFlags, sizeof(dwFlags"],[1,7951,"AL_HEADERS,\n                                       0, WINHTTP_NO_REQUEST_DATA, 0, \n                                       0, 0);\n\n    // PLACE ADDITIONAL CODE HERE.\n\n    // Report any errors.\n    if (!bResults)\n        printf( \"Error %d has occurred.\\n\", GetLastError("],[-1,7955,"\t\tb"],[1,7958,"\n    // Close any open handles.\n    if (h"],[-1,7965," ="],[1,7967,")"],[-1,7975,"Se"],[1,7977,"CloseHa"],[1,7979,"le(h"],[1,7986,");\n    if "],[-1,7988,"OpenRequest, NULL, 0, NULL, 0); //发送http请求\n\t}"],[1,8033,"Connect) WinHttpCloseHandle(hConnect);\n    if (hSession) WinHttpCloseHandle(hSession);"]],[7591,8033],[9134,9134]]],[1561473262874,["yongchao@yongchao-PC",[[1,7586,"\n"]],[7585,7585],[7586,7586]]],[1561473263895,["yongchao@yongchao-PC",[[1,7586,"| **Header** | winhttp.h |\n| **Library** | Winhttp.lib |\n| **DLL** | Winhttp.dll |"]],[7586,7586],[7668,7668]]],[1561473832304,["yongchao@yongchao-PC",[[-1,7674,""],[1,7674,"```\n    DWORD dwSize = 0;\n    LPVOID lpOutBuffer = NULL;\n    "],[-1,7905," "],[1,7906,""],[-1,8022," "],[1,8023,""],[-1,8183,"wingtiptoys"],[1,8194,"microsoft"],[-1,8291,"R"],[1,8292,"r"],[-1,8376,"PU"],[1,8378,"GE"],[-1,8382,"\n                                       L\"/writetst.txt\", "],[1,8440,"NULL,"],[-1,8505," "],[-1,8634,"R"],[1,8635,"r"],[-1,8660," "],[-1,8710," "],[-1,8851," "],[-1,8907,"PLACE ADDITIONAL CO"],[1,8926,"End the request.\n    if (bResults)\n        bResults = WinHttpReceiveResponse( hRequest, NULL);\n\n    // First, use WinHttpQueryHeaders to obtain the size of the buffer.\n    if (bResults)\n    {\n        WinHttpQueryHeaders( hRequest, WINHTTP_QUERY_RAW_HEADERS_CRLF,\n                             WINHTTP_HEADER_NAME_BY_INDEX, NULL,\n                             &dwSize, WINHTTP_NO_HEADER_INDEX);\n\n        // Allocate memory for the buffer.\n        if( GetLastError( ) == ERROR_INSUFFICIENT_BUFFER )\n        {\n            lpOutBuffer = new WCHAR[dwSize/sizeof(WCHAR)];\n\n            // Now, use WinHttpQueryHeaders to retrieve the header.\n            bResults = WinHttpQueryHeaders( hRequest,\n                                       WINHTTP_QUERY_RAW_HEA"],[1,8928,"RS_CRLF,\n                                     "],[1,8929," WINHTTP_"],[1,8931,"ADE"],[1,8932,"_NAM"],[1,8933,"_BY_INDEX,\n                                       lpOutBuffer, &dwSize,\n                                       WINHTTP_NO_HEADER_INDEX);\n        }\n    }\n\n    // Print the header contents"],[1,8935,"    if (bResults)\n        printf(\"Header contents: \\n%S\",lpOutBuffer);\n\n    // Free the allocated memory.\n    delete [] lpOutBuffer;\n"],[-1,8996," "],[-1,9024," "],[1,9218,"```"]],[7674,9218],[10328,10328]]],[1561474029695,["yongchao@yongchao-PC",[[-1,10329,"```"]],[10332,10332],[10329,10329]]],[1561474030088,["yongchao@yongchao-PC",[[-1,10329,"\n"]],[10329,10329],[10328,10328]]],[1561474030891,["yongchao@yongchao-PC",[[1,10329,"\n"]],[10328,10328],[10329,10329]]],[1561474031596,["yongchao@yongchao-PC",[[1,10330,"\n"]],[10329,10329],[10330,10330]]],[1561474032678,["yongchao@yongchao-PC",[[-1,10330,"\n"],[1,10331,"`"]],[10330,10330],[10331,10331]]],[1561474033051,["yongchao@yongchao-PC",[[1,10331,"``"]],[10331,10331],[10333,10333]]],[1561474033154,["yongchao@yongchao-PC",[[1,10333,"language\n```\n"]],[10333,10333],[10333,10341]]],[1561474034013,["yongchao@yongchao-PC",[[-1,10333,"language"],[1,10341,"\n"]],[10333,10341],[10334,10334]]],[1561474035156,["yongchao@yongchao-PC",[[1,10334,"```\n DWORD dwSize = 0;\n    DWORD dwDownloaded = 0;\n    LPSTR pszOutBuffer;\n    BOOL  bResults = FALSE;\n    HINTERNET  hSession = NULL, \n               hConnect = NULL,\n               hRequest = NULL;\n\n    // Use WinHttpOpen to obtain a session handle.\n    hSession = WinHttpOpen( L\"WinHTTP Example/1.0\",  \n                            WINHTTP_ACCESS_TYPE_DEFAULT_PROXY,\n                            WINHTTP_NO_PROXY_NAME, \n                            WINHTTP_NO_PROXY_BYPASS, 0);\n\n    // Specify an HTTP server.\n    if (hSession)\n        hConnect = WinHttpConnect( hSession, L\"www.microsoft.com\",\n                                   INTERNET_DEFAULT_HTTPS_PORT, 0);\n\n    // Create an HTTP request handle.\n    if (hConnect)\n        hRequest = WinHttpOpenRequest( hConnect, L\"GET\", NULL,\n                                       NULL, WINHTTP_NO_REFERER, \n                                       WINHTTP_DEFAULT_ACCEPT_TYPES, \n                                       WINHTTP_FLAG_SECURE);\n\n    // Send a request.\n    if (hRequest)\n        bResults = WinHttpSendRequest( hRequest,\n                                       WINHTTP_NO_ADDITIONAL_HEADERS,\n                                       0, WINHTTP_NO_REQUEST_DATA, 0, \n                                       0, 0);\n\n    // End the request.\n    if (bResults)\n        bResults = WinHttpReceiveResponse( hRequest, NULL);\n\n    // Continue to verify data until there is nothing left.\n    if (bResults)\n        do \n        {\n\n            // Verify available data.\n            dwSize = 0;\n            if (!WinHttpQueryDataAvailable( hRequest, &dwSize))\n                printf( \"Error %u in WinHttpQueryDataAvailable.\\n\",\n                        GetLastError());\n\n            // Allocate space for the buffer.\n            pszOutBuffer = new char[dwSize+1];\n            if (!pszOutBuffer)\n            {\n                printf(\"Out of memory\\n\");\n                dwSize=0;\n            }\n            else\n            {\n                // Read the Data.\n                ZeroMemory(pszOutBuffer, dwSize+1);\n\n                if (!WinHttpReadData( hRequest, (LPVOID)pszOutBuffer, \n                                      dwSize, &dwDownloaded))\n                    printf( \"Error %u in WinHttpReadData.\\n\", GetLastError());\n                else\n                    printf( \"%s\\n\", pszOutBuffer);\n\n                // Free the memory allocated to the buffer.\n                delete [] pszOutBuffer;\n            }\n\n        } while (dwSize > 0);\n\n    // Report any errors.\n    if (!bResults)\n        printf( \"Error %d has occurred.\\n\", GetLastError());\n\n    // Close open handles.\n    if (hRequest) WinHttpCloseHandle(hRequest);\n    if (hConnect) WinHttpCloseHandle(hConnect);\n    if (hSession) WinHttpCloseHandle(hSession);\n```"]],[10334,10334],[13084,13084]]],[1561474037367,["yongchao@yongchao-PC",[[-1,10334,"```\n DWORD dwSize = 0;\n    DWORD dwDownloaded = 0;\n    LPSTR pszOutBuffer;\n    BOOL  bResults = FALSE;\n    HINTERNET  hSession = NULL, \n               hConnect = NULL,\n               hRequest = NULL;\n\n    // Use WinHttpOpen to obtain a session handle.\n    hSession = WinHttpOpen( L\"WinHTTP Example/1.0\",  \n                            WINHTTP_ACCESS_TYPE_DEFAULT_PROXY,\n                            WINHTTP_NO_PROXY_NAME, \n                            WINHTTP_NO_PROXY_BYPASS, 0);\n\n    // Specify an HTTP server.\n    if (hSession)\n        hConnect = WinHttpConnect( hSession, L\"www.microsoft.com\",\n                                   INTERNET_DEFAULT_HTTPS_PORT, 0);\n\n    // Create an HTTP request handle.\n    if (hConnect)\n        hRequest = WinHttpOpenRequest( hConnect, L\"GET\", NULL,\n                                       NULL, WINHTTP_NO_REFERER, \n                                       WINHTTP_DEFAULT_ACCEPT_TYPES, \n                                       WINHTTP_FLAG_SECURE);\n\n    // Send a request.\n    if (hRequest)\n        bResults = WinHttpSendRequest( hRequest,\n                                       WINHTTP_NO_ADDITIONAL_HEADERS,\n                                       0, WINHTTP_NO_REQUEST_DATA, 0, \n                                       0, 0);\n\n    // End the request.\n    if (bResults)\n        bResults = WinHttpReceiveResponse( hRequest, NULL);\n\n    // Continue to verify data until there is nothing left.\n    if (bResults)\n        do \n        {\n\n            // Verify available data.\n            dwSize = 0;\n            if (!WinHttpQueryDataAvailable( hRequest, &dwSize))\n                printf( \"Error %u in WinHttpQueryDataAvailable.\\n\",\n                        GetLastError());\n\n            // Allocate space for the buffer.\n            pszOutBuffer = new char[dwSize+1];\n            if (!pszOutBuffer)\n            {\n                printf(\"Out of memory\\n\");\n                dwSize=0;\n            }\n            else\n            {\n                // Read the Data.\n                ZeroMemory(pszOutBuffer, dwSize+1);\n\n                if (!WinHttpReadData( hRequest, (LPVOID)pszOutBuffer, \n                                      dwSize, &dwDownloaded))\n                    printf( \"Error %u in WinHttpReadData.\\n\", GetLastError());\n                else\n                    printf( \"%s\\n\", pszOutBuffer);\n\n                // Free the memory allocated to the buffer.\n                delete [] pszOutBuffer;\n            }\n\n        } while (dwSize > 0);\n\n    // Report any errors.\n    if (!bResults)\n        printf( \"Error %d has occurred.\\n\", GetLastError());\n\n    // Close open handles.\n    if (hRequest) WinHttpCloseHandle(hRequest);\n    if (hConnect) WinHttpCloseHandle(hConnect);\n    if (hSession) WinHttpCloseHandle(hSession);\n```"]],[13084,13084],[10334,10334]]],[1561474038279,["yongchao@yongchao-PC",[[1,10334,"```\n DWORD dwSize = 0;\n    DWORD dwDownloaded = 0;\n    LPSTR pszOutBuffer;\n    BOOL  bResults = FALSE;\n    HINTERNET  hSession = NULL, \n               hConnect = NULL,\n               hRequest = NULL;\n\n    // Use WinHttpOpen to obtain a session handle.\n    hSession = WinHttpOpen( L\"WinHTTP Example/1.0\",  \n                            WINHTTP_ACCESS_TYPE_DEFAULT_PROXY,\n                            WINHTTP_NO_PROXY_NAME, \n                            WINHTTP_NO_PROXY_BYPASS, 0);\n\n    // Specify an HTTP server.\n    if (hSession)\n        hConnect = WinHttpConnect( hSession, L\"www.microsoft.com\",\n                                   INTERNET_DEFAULT_HTTPS_PORT, 0);\n\n    // Create an HTTP request handle.\n    if (hConnect)\n        hRequest = WinHttpOpenRequest( hConnect, L\"GET\", NULL,\n                                       NULL, WINHTTP_NO_REFERER, \n                                       WINHTTP_DEFAULT_ACCEPT_TYPES, \n                                       WINHTTP_FLAG_SECURE);\n\n    // Send a request.\n    if (hRequest)\n        bResults = WinHttpSendRequest( hRequest,\n                                       WINHTTP_NO_ADDITIONAL_HEADERS,\n                                       0, WINHTTP_NO_REQUEST_DATA, 0, \n                                       0, 0);\n\n    // End the request.\n    if (bResults)\n        bResults = WinHttpReceiveResponse( hRequest, NULL);\n\n    // Continue to verify data until there is nothing left.\n    if (bResults)\n        do \n        {\n\n            // Verify available data.\n            dwSize = 0;\n            if (!WinHttpQueryDataAvailable( hRequest, &dwSize))\n                printf( \"Error %u in WinHttpQueryDataAvailable.\\n\",\n                        GetLastError());\n\n            // Allocate space for the buffer.\n            pszOutBuffer = new char[dwSize+1];\n            if (!pszOutBuffer)\n            {\n                printf(\"Out of memory\\n\");\n                dwSize=0;\n            }\n            else\n            {\n                // Read the Data.\n                ZeroMemory(pszOutBuffer, dwSize+1);\n\n                if (!WinHttpReadData( hRequest, (LPVOID)pszOutBuffer, \n                                      dwSize, &dwDownloaded))\n                    printf( \"Error %u in WinHttpReadData.\\n\", GetLastError());\n                else\n                    printf( \"%s\\n\", pszOutBuffer);\n\n                // Free the memory allocated to the buffer.\n                delete [] pszOutBuffer;\n            }\n\n        } while (dwSize > 0);\n\n    // Report any errors.\n    if (!bResults)\n        printf( \"Error %d has occurred.\\n\", GetLastError());\n\n    // Close open handles.\n    if (hRequest) WinHttpCloseHandle(hRequest);\n    if (hConnect) WinHttpCloseHandle(hConnect);\n    if (hSession) WinHttpCloseHandle(hSession);\n```"]],[10334,10334],[13084,13084]]],[1561474044033,["yongchao@yongchao-PC",[[1,10339,"  "]],[10339,10339],[10341,10341]]],[1561474046616,["yongchao@yongchao-PC",[[-1,10334,"```"]],[10334,10337],[10334,10334]]],[1561474047769,["yongchao@yongchao-PC",[[-1,10334,"\n"]],[10334,10334],[10333,10333]]],[1561474049563,["yongchao@yongchao-PC",[[1,10337," "]],[10337,10337],[10338,10338]]],[1561474063379,["yongchao@yongchao-PC",[[1,10330,"\n"]],[10329,10329],[10330,10330]]],[1561474076818,["yongchao@yongchao-PC",[[1,10330,"WinHttpQueryDataAvailable\\WinHttpReadData"]],[10330,10330],[10371,10371]]],[1561474094799,[null,[[1,7585,"Code demo"]],[7585,7585],[7594,7594]]],[1561474094799,[null,[[-1,7585,"Code demo"]],[7594,7594],[7585,7585]]],[1561474090029,["yongchao@yongchao-PC",[[1,7585,"Code deom"]],[7585,7585],[7594,7594]]],[1561474091359,["yongchao@yongchao-PC",[[-1,7592,"om"]],[7594,7594],[7592,7592]]],[1561474092202,["yongchao@yongchao-PC",[[1,7592,"mo"]],[7592,7592],[7594,7594]]],[1561474090029,["yongchao@yongchao-PC",[[1,7585,"Code deom"]],[7585,7585],[7594,7594]]],[1561474091359,["yongchao@yongchao-PC",[[-1,7592,"om"]],[7594,7594],[7592,7592]]],[1561474092202,["yongchao@yongchao-PC",[[1,7592,"mo"]],[7592,7592],[7594,7594]]],[1561474104650,[null,[[-1,7594,"Code demo"]],[7594,7594],[7594,7594]]],[1561474104650,[null,[[1,7594,"Code demo"]],[7594,7594],[7594,7594]]],[1561474099418,["yongchao@yongchao-PC",[[-1,7682,"\t```"]],[7682,7686],[7682,7682]]],[1561474100073,["yongchao@yongchao-PC",[[-1,7682,"\n"]],[7682,7682],[7681,7681]]]],null,"yongchao@yongchao-PC"]]}